 tá beleza então ninguém vai ter mais um ponto eu tenho só a questão aqui do ICP para falar para gente fazer essa definição se é de teve já alguns pontos né que levantaram lá na última vez mas olhando para essa tabela aqui a gente o que que a gente precisa que a gente primeiro a gente precisa mudar alguma coisa se sim o que que a gente tem que mudar aqui nessa tabela o que que não faz mais sentido que que não faz mais sentido aqui alguém quer começar e eu acho que não faz mais sentido o vídeo que te básicos e aqui né o que que vocês acham aí e eu acho que sim também Ah tá então Pedro por que que não faz sentido eu acho que não tá tendo nenhum uso ou não dele não tá do desse vídeo que a gente não tá tendo nem impacto na hora de de ler o código de por exemplo de adicionar uma complexidade nele Ah tá então quando eu adiciono uma coluna ele não dificulta a legibilidade do código ele não dificulta a complexidade do código é isso E aí E aí e isso não dificulta o meu entendimento dele a beleza mas alguém tem um ponto sobre isso alguém te corda é a mesma coisa do Carlos do e aí eu concordo com isso tá beleza ok a gente pode pedir pela sua mudança pode ser essa mudançafazendo você tirar aí o a coluna e E então, eu vou até fazer uma análise de como gerenciar isso no código, né? Porque tem vários ICPs já... Lembrando que a gente tem que fazer uma boa discussão, né? Até pra na semana que vem a possibilidade de tirar um ICP ou de mudar ele, tipo, não ocorra assim... Quer dizer, nós somos livres, bem livres pra fazer isso, tá? É melhor que a gente faça mudanças quando necessárias, tá? Mas seria legal a gente analisar bem as coisas pra que não seja feito mudanças ou muito radicais ou constantes. Por quê? Porque agora, beleza, vamos tirar a coluna, vamos tirar a row, wrap... Só que a gente agora tem que atualizar no código, porque a gente tá comentando, né? Não tem um plugin pra fazer isso, por exemplo. Aí fica a dica aí pra quem... Quem quiser uma pesquisa nessa área. Eu posso até me responsabilizar por ir analisar todo o sistema, né? Que a gente tá fazendo e retirar esses comentários. Beleza. Então tem que tirar o comentário, o ICP, e tem que atualizar a carga cognitiva total da classe. Porque, né? Imagina que tem lá várias colunas, então vai sair vários ICPs. Beleza? Tem mais algum outro aqui? Quer dizer... Deixa eu perguntar mais diretamente. Esse aqui de if, else, for, while, externários, eles estão fazendo sentido? Pra qualquer else, pra qualquer if, pra qualquer for que eu enxergue, eu vou ter ali um de ICP? Ou não, eu só quero quando tem a ver com o widget, se a gente vai controlando o widget. Ou não, não faz nem sentido mais. O que vocês estão achando disso? Eu acho que... Tem que manter. Todo mundo acha que não tem? Eu também. Tá. Por que, Daniel, tem que manter? Porque, pelo menos no meu código, eu uso bastante if, else, de uma forma que não dá pra desconsiderar. Entendi. Tu usa, por exemplo, pra trabalhar com serviço, com... sei lá... É, por exemplo, no formulário de criação de uma demanda, como é o mesmo formulário, eu precisei criar algumas lógicas pra... Por exemplo, né, porque você pode criar ou editar. Então, quando ele clica no botão, ele tem que ver o que o usuário tá fazendo pra fazer a coisa certa também. Entendeu? Tipo assim, às vezes o usuário pode colocar uma tela em branco e tal, então eu coloquei uns ifs e else que detectam isso. Tá, tá, entendi. Beleza, alguém tem mais a acrescentar sobre isso? A própria parte de legibilidade, pra quem não tá desenvolvendo, por exemplo, como o Daniel, né, aí às vezes eu pego as telas que ele faz, aí, por exemplo, teve uma aí que ele usou bastante if, else. Aí, só do... de tá lá o comentário, né, que ó, esse aqui é um .cp, que eu sei, né, que é o if, else, cada um custa um. E faz sentido cada um custar um, porque às vezes ele usa if, else pra diferentes coisas, não só pra formulário, pra atualizar a tela também. Então, tipo, é importante ter esse .cp ainda. Beleza, ok. Então, você mantém o entendimento da última vez, né? Tá, vamos lá. Outra coisa que talvez vocês não tenham... Quer dizer, algumas pessoas não entenderam ainda muito bem, é... Sobre... O acoplamento. Por exemplo, eu vi que algumas pessoas colocaram acoplamento pra one-preced, tá? E talvez tá confundindo um pouco... Quer dizer, é isso daqui, a função como argumento. Tá confundindo um pouco o que é uma função como argumento. Uma função como argumento... Uma função como argumento é... É quando uma classe, ela recebe, como parâmetro dessa classe, uma função. Tá? Por exemplo, eu usei aquele exemplo do botão, mas podia ser qualquer outro tipo de classe. Beleza? Qualquer outro tipo de classe. E aí, talvez, pelo exemplo que eu dei, algumas pessoas acharam que one-preced era um acoplamento de função. Então, one-preced não é um acoplamento de função. Por quê? Porque, vamos supor, você tem ali um text-button, um material-button, um elevated-button. Ele tem... Ele já... Ele é uma classe... Ele é um widget do Flutter mesmo. E ele tem esse parâmetro one-preced. Então, não é uma classe que tu tá criando e tu tá recebendo ela como uma... Tu tá recebendo uma função como argumento. Tá? Então, one-preced não é uma função como argumento. Então, ele não conta o ICP. Só vai contar quando eu crio essa classe e essa classe que eu criei, ela recebe uma função. Tá? E aí, eu coloco... Inclusive, eu coloco em cima... Eu nem coloco lá onde eu chamo a função. Onde eu passo, na verdade, a função. Eu coloco lá onde... Dentro da classe que eu criei. Lá em cima da variável... Sei lá. Vamos supor que eu criei a variável... O nome é... Sei lá. É function. Só... Acho que não pode, né? Deixa eu ver outro. É... Sei lá. My function. E aí, esse my function, o tipo dela é uma função. Pode ser um... Um void callback. Que é um tipo de função. E aí, eu coloco lá em cima esse ICP. Deu pra entender isso aqui que eu tô falando? Deu sim. Tá. Então, é isso. Só se atentem que função como argumento... Eu, primeiro, eu só contabilizo na classe que eu criei... Que eu criei as funções e elas já são recebidas... E é uma função recebida como argumento. E eu vou comentar em cima desse... Dessa... Dessa... Dessa variável que eu criei. E aí, dependência de classe, acho que todo mundo... Todo mundo entendeu, né? Acho que eu não vi erros lá de... Pra contabilizar isso. Aí, a pergunta. Ainda faz sentido o C2 de ICP? É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... É... Beleza. É... Alguma outra coisa que vocês querem destacar, querem falar mais sobre, funções assíncronas, ou widgets assíncronos, gerenciamento de estado. Por exemplo, esses widgets animados aqui. Já está trabalhando. Ainda não estou utilizando. Ainda não, porque o design ainda não está definido. Por isso que eu quero até conversar contigo e com o Alohany. Porque não adianta eu, por exemplo, criar uma coisa, né? E depois, tipo, ter que ser retirado. Como foi no caso de uma barra lá que eu fiz, né? Para o formulário. Só que, tipo, no design lá do fluxo de telas, ela não está presente e também não faz sentido ter ela. Aí eu ainda não estou utilizando. Eu tenho um ponto para Flutter Block e Flutter Form Block, tipo, abaixar de 3 para 2. Não sei se os outros concordam. Ah, por que abaixar? Como abaixar e por quê? Eu acho que ele está menos complexo de se ler, na atual sprint, do que antes. Por exemplo, antes a gente não tinha tanta prática. E agora que a gente... Agora que a gente está desenvolvendo o aplicativo, ele vem se tornando menos complexo de se entender. Entendi. Alguém concorda? Alguém discorda? Como é que é? Pode falar de novo, cara, que a minha internet está dando uma cortada. Eu só estava falando que eu tenho a sugestão de abaixar o ICP de Flutter Block e Flutter Form Block para 2 ao invés de 3. E com a gente trabalhando nesse projeto, o índice de complexidade dele abaixou devido à nossa própria prática com ele utilizando. Ele está menos complexo do que antes que a gente começou a desenvolver esse aplicativo. Ah, sim, sim. Isso é verdade. Até porque a gente está usando mais também, né? Em diversas aplicações dele durante o recorrer da aplicação. Entendi. Então, esse 3 aqui está mais relacionado à falta de prática, à falta de entendimento que vocês tinham sobre provider. Então, tu acha que agora tem que diminuir. Para 1 em 1, né? 1 quando notifica ou 1 para toda construção? Qual é a tua proposta? A minha proposta seria 1 para toda construção. Aí ficaria 3. Não, calma. Não entendi. Tipo, tu quer que isso aqui vire 1 e o ICP vire 1? Ou que um change notifier e um consumer... Não. Que o consumer vire 1. Exato. O change notifier e o consumer vire 1. Então, o total seria 2. Exato. E embaixo também seria 2. Esse aqui. Entendi. Carlos e Daniel aí estão comentando bastante coisa. O que vocês acham? Eu não estou tendo problema com a forma como eu estou usando. Eu estou usando o sistema de controle. Eu não estou tendo problema com a forma como eu estou usando agora. Nem podia continuar. Tu acha que 3 é um bom valor, por exemplo, para provider? Tu não acha que é muito? Tu discorda do João? Não. Não. Não. Não. Então, eu acho que ele pode estar em primeira linha. O importantismo de tudo que lors, né. Bom, vai chegar ali em terminando. Aí tem e o final... Agora na última clica foi um detalhe, deTwift. Podia ter na segunda clica棙. Você não estava como dois filhos mais velhos ainda. Se Foxy hein, o lightning vai até a próxima. Os dois filhos até o final de qual Fora da Brasília são os maiores turmericos. Nãohh isso é outra coisa que eu não entendeu. Antes disso, vamos primeiro pensar no ICP, depois a gente pensa no total. Primeiro vamos pensar aqui sobre a carga cognitiva, a complexidade na verdade de cada item. Ah, eu acho que esse item, um consumer, ele não é doce, porque eu acho que ele não é tão complexo assim, porque agora eu melhorei até o meu entendimento, acho que a equipe melhorou o entendimento, a gente está com bastante prática, aí sim, aí vamos diminuir. No fim a gente pensa sobre o total da carga cognitiva. Por enquanto vamos pensar só na complexidade dos itens. E aí o João Pedro está vindo para dizer que a gente tem que diminuir esse consumer para 1, porque o entendimento está melhorando. Então, vamos lá. Não está sendo mais tão complexo para o time. O Carlos está falando que é para manter. E aí, quem toma a terceira opinião? Assim, particularmente eu não sei, porque eu ainda, essa semana na verdade eu ainda ia tirar um tempo para estudar esse provider, porque ainda não entrou direito na minha cabeça, eu preciso fazer isso porque o meu código está ficando, na minha opinião, muito complexo, e o provider ajuda a tirar essa complexidade. Então, eu acho que deveria manter. Por enquanto. Tá, assim, o que a gente pode tomar uma estratégia aqui para tentar definir se é 2 ou se é 1, é fazer uma comparação. É comparar com outros itens. Comparar com outros elementos que a gente está quantificando, né, a complexidade deles. Então, vocês têm que olhar para o consumer e olhar para a tabela, no geral, tá? Porque a gente está definindo a complexidade de cada um desses itens. Então, esse item é mais complexo que aquele, é mais difícil de implementar, é mais fácil de implementar, é mais difícil de entender, o conceito é mais difícil, é mais fácil. Então, a gente está comparando esses elementos. Tanto é que, se eu, por exemplo, se tiver uma mudança aqui, a próxima pergunta que eu vou fazer é, tem que mudar então esses caras aqui? Um future stream? Porque os conceitos aqui são meio parecidos. Tá, tudo bem, aqui é a promoção assíncrona, aqui é a gerenciamento de estado. Mas tem uma proximidade ali, estamos falando de você mudar o estado e notificar todo mundo, por exemplo. Pode ser que um stream builder, um future builder seja um bom consumer? É só para a gente ter um parâmetro de comparação. É, exatamente. Eu dei a sugestão justamente pelo fato do que a gente está trabalhando mais. Aí, por exemplo, o flutter block, a gente tem trabalhado com ele bastante. Principalmente o Carlos, que ele fez, ele utilizou o flutter block e flutter form block. Aí, por exemplo, se a gente for comparar com os demais, a gente está tendo mais prática com esses dois, né? Do que, por exemplo, uma função assíncrona. Aí, por isso que a função assíncrona ainda deveria continuar. Aí, essa era só uma system que eu tinha dado, entendeu? Tá, entendi. Eu acho que até o Daniel e o Carlos estão vendo mais essa parte aí, um pouco. Podem falar, mas eu acho que vocês estão trabalhando bastante em função assíncrona. Eu acho que qualquer chamada ao banco é uma função assíncrona, por exemplo. Não é isso? É, eu acho que qualquer chamada ao banco é uma função assíncrona. Por exemplo, eu não fico escutando ali através do mainstream o Firebase. Por exemplo, eu não fico escutando ali através do mainstream o Firebase. Sim. É a questão que a gente vai fazer também de solicitações também, que eu queria que fosse assim. Pois é, e aí? Pois é, e aí? Pois é, e aí? Pois é, e aí? Pois é, e aí? Pois é, e aí? É, alguém tem a que acrescentar nessa discussão. De novo a pergunta. É a gente poderia manter isso aí e continuar só com isso aí. só com o que tirar o o it básico então a gente vai manter esse tanto o consumo e quanto talvez essa questão de manipular uma espinha manipular um filtro como dois de cp achar razoável acho que tem que ir pra um também porque o nosso entendimento está melhorando então ainda assim a razão e aí quem mais mas o que mais acho que sobre manter hoje no dia só realmente só tirar esse vídeo de base e o resto manter tá ok acho que é isso mesmo é sobre o total a carga cognitiva a gente na última vez fez é falar um pouco sobre algumas pessoas falam um pouco sobre diminuir a a curtir a total porque não estava afetando um tipo num era um valor alto e aí fazer com que não forçasse muito você tem que refatorar nem a classe tal só que o o joão pedro veio com a questão do do layout né quando você adicionou ao tipo que geralmente a entrega do que o daniel é são funcionalidades não tem a partir de alt então muito código ali é entre aspas ignorado a partir de altos e aí depois quando vem a parte de né da interface do usuário aí vai vir vários vários ternários ali talvez alguns vídeos a mais talvez entre a questão da animação e isso vai aumentar quase vai aumentar o cp de culpa é aumentar a classe por definição e aí que mais a gente pode falar sobre isso e definir por exemplo é a semana passada foi tocado num ponto né eu até levantei que está falando que uma classe por exemplo é tinha uma carga cognitiva bem baixo por exemplo aí eu levantei o ponto que quando é adicionado o layout né o design aí a carga ela aumenta até muito mais do que oito por exemplo de ue sempre lá tinha uma classe 8 aí depois que eu implementei ela aumentou para 20 mas ainda assim é ela não não estoura né eu tenho eu tomo a carga cognitiva massa quando a gente retirar esses vídeos básicos ela vai baixar para 30 e eu ainda acho assim que nós vamos ter problemas com isso tá entendido assim a idéia não é muito a gente fazer conta pra ver como é que tudo bem tem que analisar os impactos de mudança de cp mudança total a carga cognitiva mas o propósito é gerenciar a complexidade da classe pra gente gerenciar a complexidade da classe a gente olha para os itens por exemplo essa tabela define o valor um valor máximo ali e aí quando a gente faz a definição aí que a gente vai olhar para nossas classes e tentar entender se elas estão complexas de acordo com as nossas definições então tentem não fazer mudanças pensando em como isso vai ficar dentro da minha classe entendeu? então o que a gente deve olhar é itens de complexidade faz sentido esses itens faz total a carga cognitiva dados dos itens que a gente definiu a gente define aqui como o dobro ou pode até diminuir um pouco mais olha só pra isso e depois dessa definição a gente olhar para nossas classes porque isso aqui que vai dizer essa essa tabela e total de gcp que vai definir se uma classe está complexa ou não então não olhar muito pra classe para definir tipo assim Imaginar ali as classes, como diminuir, fazer uma conta Não tô falando que tá fazendo exatamente isso Tô só falando pra gente evitar fazer isso Tá, então aqui Esse aqui vai sair, né? Então aqui vai cair pra 30 Exato 30 pontos de CP Todo mundo tá de acordo? Sim Sim Beleza Bom, alguém tem algo a acrescentar? Uma dica aí sobre alguma prática? Só confirmando O widget básico Vamos sair? É, esse aqui vai sair Tá, então no caso as mudanças seriam mudar o widget básico E E a carga cognitiva ficar em 30, é isso? É, porque Tipo, como é o dobro, né? A gente tá definindo aqui que o ICP é o dobro do total de ICP E tá saindo um ICP daqui Então aqui sai dois, né? Então sai de 30 pra 30 Beleza Ô, sai de 32 pra 30 Tá, eu vou atualizar essa tabela e colocar no grupo E aí, o interessante Acho que eu nem completei isso no começo ali da reunião Mas o interessante é que vocês Não sei se vocês já estão vendo isso Não sei se vocês já estão vendo isso Não sei se vocês já estão vendo isso Não sei se vocês já estão vendo isso Não sei se vocês já estão vendo isso Não sei se vocês já estão vendo isso Não sei se vocês já estão vendo isso Baixa aí o PDFzinho Esse PDF que eu vou colocar lá E aí na hora que você estiver desenvolvendo Eu sei que vocês estão com algumas práticas sobre Primeiro codar, depois fazer a contagem do ICP, né? Então quando vocês forem fazer a contagem do ICP Bota a tabela ali do lado Bota no celular aqui Dá uma olhada na tabela Pra não perder nada Beleza? Beleza Então a partir de agora Beleza? Então a partir de agora já tá valendo, né? Sim, sim, eu vou colocar Se acabar a reunião aqui eu vou subir lá o PDF no grupo Aí só baixar já vai estar atualizado Beleza, então Aqueles dois Aquelas duas tarefas, né? Que faltam só contabilizar o ICP Eu já vou atualizar já conforme Essa tabela E o restante do projeto todo Vou fazer um git pull aqui E já vou fazendo isso Beleza Beleza Alguma coisa que acrescentar aí, pessoal? Sobre alguma parte da reunião? Da planning? Por enquanto não Por enquanto não também Beleza, então vamos Se atualizando ali no grupo E aí Qualquer coisa também O Enzo não veio nessa reunião da planning Mas ele que tá ali É o seu master Vai dirigir melhor vocês também Sobre as tarefas Então, é isso aí, pessoal Beleza? Então falem com ele sobre Sei lá, algumas definições Tentar ver quem vai fazer o que também E aí a gente vai se falando No WhatsApp, eu tô sempre disponível Só mandar mensagem que Quando eu ver a mensagem eu ajudo Eu respondo, beleza? Beleza Então, boa semana aí pra vocês E vamos Falar igual eu Vamos trabalhar, bora trabalhar Beleza Beleza, bora Falou, falou Bora trabalhar, amigos Fala, galera Bom dia, mano Valeu, valeu Valeu Valeu Valeu Valeu Valeu Valeu Valeu Valeu Valeu Valeu Valeu